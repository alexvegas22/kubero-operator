apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: manager-role
rules:
##
## Base operator rules
##
# We need to get namespaces so the operator can read namespaces to ensure they exist
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
# We need to manage Helm release secrets
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - "*"
# We need to create events on CRs about things happening during reconciliation
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create

##
## Rules for application.kubero.dev/v1alpha1, Kind: KuberoApp
##
- apiGroups:
  - application.kubero.dev
  resources:
  - kuberoapps
  - kuberoapps/status
  - kuberoapps/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- verbs:
  - "*"
  apiGroups:
  - ""
  resources:
  - "serviceaccounts"
  - "services"
  - "roles"
  - "clusterroles"
  - "rolebindings"
  #- "persistentvolumeclaims"
  #- "persistentvolumes"
  #- "resourcequotas"
- verbs:
  - "*"
  apiGroups:
  - "apps"
  resources:
  - "deployments"
- verbs:
  - "*"
  apiGroups:
  - "autoscaling"
  resources:
  - "horizontalpodautoscalers"
- verbs:
  - "*"
  apiGroups:
  - "networking.k8s.io"
  resources:
  - "ingresses"
- verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
  apiGroups:
  - "batch"
  resources:
  - "cronjobs"

##
## Rules for application.kubero.dev/v1alpha1, Kind: Kubero
##
- apiGroups:
  - application.kubero.dev
  resources:
  - kuberoes
  - kuberoes/status
  - kuberoes/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- verbs:
  - "*"
  apiGroups:
  - "apps"
  resources:
  - "deployments"
- verbs:
  - "*"
  apiGroups:
  - ""
  resources:
  - "serviceaccounts"
  - "services"
- verbs:
  - "*"
  apiGroups:
  - "operators.coreos.com"
  resources:
  - "clusterserviceversions"

#+kubebuilder:scaffold:rules
