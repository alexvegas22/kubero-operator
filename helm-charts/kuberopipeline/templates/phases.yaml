# https://itnext.io/manage-auto-generated-secrets-in-your-helm-charts-5aee48ba6918

{{- $mainnamespace := .Values.mainnamespace | default "kubero" -}}
# retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
{{- $secretObj := (lookup "v1" "Secret" $mainnamespace "registry-login") | default dict }}
{{- $secretData := (get $secretObj "data") | default dict }}
{{- $dockerconfigjson := (get $secretData ".dockerconfigjson") | default "" }}
{{- $registryUsername := (get $secretData "username") | default "" }}
{{- $registryPassword := (get $secretData "password") | default "" }}

{{- $kuberoObj := (lookup "application.kubero.dev/v1alpha1" "Kubero" $mainnamespace "kubero") | default dict }}
{{- $specData := (get $kuberoObj "spec") | default dict }}
{{- $registryData := (get $specData "registry") | default dict }}
{{- $registryHost := (get $registryData "host") | default "kubero-registry.kubero.svc" }}
{{- $registryProtocol := (get $registryData "protocol") | default "http" }}
{{- $registryPort := (get $registryData "port") | default 5000 }}

{{- $name := .Values.name -}}
{{- $deploymentstrategy := .Values.deploymentstrategy -}}
{{- $deploykey := .Values.git.keys.priv -}}
{{- $deploykeyPub := .Values.git.keys.pub -}}
{{- $deploykeySshUrl := splitList ":" .Values.git.repository.ssh_url | first -}}

{{- range .Values.phases }}
{{- if .enabled }}
apiVersion: v1
kind: Namespace
metadata:
  name: {{ $name }}-{{ .name }}
---
{{- if and (eq $deploymentstrategy "git") ($deploykeyPub) }}
# used by kuberoes Runpacks to pull the code
apiVersion: v1
kind: Secret
metadata:
  name: "deployment-keys"
  namespace: {{ $name }}-{{ .name }}
type: Opaque
data:
  deploykey: {{ $deploykey | quote }}
  deploykey.pub: {{ $deploykeyPub | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  name: kubero-pull-secret
  namespace: {{ $name }}-{{ .name }}
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: {{ $dockerconfigjson | quote }}
---
# kpack
apiVersion: v1
kind: Secret
metadata:
  name: git-ssh-auth
  namespace: {{ $name }}-{{ .name }}
  annotations:
    kpack.io/git: {{ $deploykeySshUrl }}
type: kubernetes.io/ssh-auth
data:
  ssh-privatekey: {{ $deploykey | quote }}
  ssh-publickey: {{ $deploykeyPub | quote }}
---
# kpack
apiVersion: v1
kind: Secret
metadata:
  name: registry-user-pass
  namespace: {{ $name }}-{{ .name }}
  annotations:
    kpack.io/docker: {{ $registryProtocol }}://{{ $registryHost }}:{{ $registryPort }}
type: kubernetes.io/basic-auth
data:
  username: {{ $registryUsername | quote }}
  password: {{ $registryPassword | quote }}
---
# kpack
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kpack-sa
  namespace: {{ $name }}-{{ .name }}
secrets:
  - name: registry-user-pass
  - name: git-ssh-auth
imagePullSecrets:
  - name: registry-user-pass
---
# kpack rolebinding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kpack-rolebinding
  namespace: {{ $name }}-{{ .name }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kpack-role
subjects:
  - kind: ServiceAccount
    name: kpack-sa
    namespace: {{ $name }}-{{ .name }}
---
# kpack role
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kpack-role
rules:
  - apiGroups:
      - kpack.io
    resources:
      - 'builds'
    verbs:
      - '*'
---
{{- end }} # end of git deploymentstrategy
{{- end }} # end of enabled
{{- end }} # end of range