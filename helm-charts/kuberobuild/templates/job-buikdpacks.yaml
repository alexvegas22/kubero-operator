{{- if eq .Values.buildstrategy "buildpacks" }}
{{- $name := printf "%s-%s-%s" .Values.app .Values.pipeline .Values.id -}}
apiVersion: batch/v1
kind: Job
metadata:
  generation: 1
  labels:
    batch.kubernetes.io/job-name: {{ $name }}
    buildstrategy: buildpacks
    kuberoapp: {{ .Values.app }}
    kuberopipeline: {{ .Values.pipeline }}
    job-name: {{ $name }}
  name: {{ $name }}
spec:
  backoffLimit: 1
  completionMode: NonIndexed
  completions: 1
  manualSelector: false
  parallelism: 1
  podReplacementPolicy: TerminatingOrFailed
  suspend: false
  template:
    metadata:
      creationTimestamp: null
      labels:
        batch.kubernetes.io/job-name: {{ $name }}
        buildstrategy: {{ .Values.buildstrategy }}
        kuberoapp: {{ .Values.app }}
        kuberopipeline: {{ .Values.pipeline }}
        job-name: {{ $name }}
    spec:
      automountServiceAccountToken: true
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - env:
          - name: REPOSITORY
            value: {{ .Values.repository.image }}
          - name: TAG
            value: {{ .Values.repository.tag | default "latest"}}
          - name: APP
            value: {{ .Values.app }}
          command:
          - sh
          - -c
          - 'kubectl patch kuberoapps $APP --type=merge -p "{\"spec\":{\"image\":{\"repository\":
            \"$REPOSITORY\",\"tag\": \"$TAG\"}}}"'
          image: bitnami/kubectl:latest
          imagePullPolicy: Always
          name: deploy
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      initContainers:
        - name: fetch
          env:
          - name: GIT_REPOSITORY
            value: {{ .Values.git.url }}
          - name: GIT_REF
            value: {{ .Values.git.ref }}
          - name: KUBERO_BUILDPACK_DEFAULT_RUN_CMD
            value: "exit 0"
          - name: KUBERO_BUILDPACK_DEFAULT_BUILD_CMD
            value: "exit 0"
          image: "ghcr.io/kubero-dev/fetch:latest"
          imagePullPolicy: Always
          resources: {}
          securityContext:
            readOnlyRootFilesystem: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /home/kubero/.ssh-mounted
            name: deployment-keys
            readOnly: true
          - mountPath: /app
            name: app-storage
          workingDir: /app
        - name: build
          args:
          - '-app=.'
          - {{ .Values.repository.image }}:{{ .Values.repository.tag | default "latest"}}
          command: ['/cnb/lifecycle/creator']
          # https://github.com/buildpacks/pack/issues/564#issuecomment-943345649
          # https://github.com/buildpacks/spec/blob/platform/v0.13/platform.md#creator
          #command: ['/cnb/lifecycle/creator', '-app=.', '-buildpacks=/cnb/buildpacks', '-platform=/platform', '-run-image=ghcr.io/kubero-dev/run:v1.4.0', '-uid=1000', '-gid=1000', 'kubero-local-dev-0037732.loca.lt/example/exampled:latest']
          #command: ['tail', '-f', '/dev/null']
          image: "paketobuildpacks/builder-jammy-full:latest" #List of Builders : https://paketo.io/docs/reference/builders-reference/
          imagePullPolicy: Always
          resources: {}
          env:
          - name: CNB_PLATFORM_API
            value: {{ .Values.buildpack.cnbPlatformApi | quote }}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app
            name: app-storage
            readOnly: false
          - mountPath: /home/cnb/.docker
            name: docker-config
            readOnly: true
          workingDir: /app
      restartPolicy: Never
      schedulerName: default-scheduler
      serviceAccount: {{ .Values.app }}-kuberoapp
      serviceAccountName: {{ .Values.app }}-kuberoapp
      terminationGracePeriodSeconds: 30
      volumes:
      - name: deployment-keys
        secret:
          defaultMode: 0666
          secretName: deployment-keys
      - emptyDir: {}
        name: app-storage
      - name: docker-config
        secret:
          secretName: kubero-pull-secret
          items:
            - key: .dockerconfigjson
              path: config.json
      - name: pull-secret
        secret:
          defaultMode: 384
          secretName: kubero-pull-secret
  ttlSecondsAfterFinished: 31536000
{{- end }}